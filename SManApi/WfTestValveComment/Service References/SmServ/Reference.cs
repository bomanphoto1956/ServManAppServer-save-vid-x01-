//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WfTestValveComment.SmServ {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReparatorCL", Namespace="http://schemas.datacontract.org/2004/07/SManApi")]
    [System.SerializableAttribute()]
    public partial class ReparatorCL : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AnvIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RepKatIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReparatorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AnvID {
            get {
                return this.AnvIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AnvIDField, value) != true)) {
                    this.AnvIDField = value;
                    this.RaisePropertyChanged("AnvID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrCode {
            get {
                return this.ErrCodeField;
            }
            set {
                if ((this.ErrCodeField.Equals(value) != true)) {
                    this.ErrCodeField = value;
                    this.RaisePropertyChanged("ErrCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrMessage {
            get {
                return this.ErrMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrMessageField, value) != true)) {
                    this.ErrMessageField = value;
                    this.RaisePropertyChanged("ErrMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RepKatID {
            get {
                return this.RepKatIDField;
            }
            set {
                if ((object.ReferenceEquals(this.RepKatIDField, value) != true)) {
                    this.RepKatIDField = value;
                    this.RaisePropertyChanged("RepKatID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reparator {
            get {
                return this.ReparatorField;
            }
            set {
                if ((object.ReferenceEquals(this.ReparatorField, value) != true)) {
                    this.ReparatorField = value;
                    this.RaisePropertyChanged("Reparator");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceHuvudCL", Namespace="http://schemas.datacontract.org/2004/07/SManApi")]
    [System.SerializableAttribute()]
    public partial class ServiceHuvudCL : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErtOrdernrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KundField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KundNamnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderAdminIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderAdminNamnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime OrderDatumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VartOrdernrField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrCode {
            get {
                return this.ErrCodeField;
            }
            set {
                if ((this.ErrCodeField.Equals(value) != true)) {
                    this.ErrCodeField = value;
                    this.RaisePropertyChanged("ErrCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrMessage {
            get {
                return this.ErrMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrMessageField, value) != true)) {
                    this.ErrMessageField = value;
                    this.RaisePropertyChanged("ErrMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErtOrdernr {
            get {
                return this.ErtOrdernrField;
            }
            set {
                if ((object.ReferenceEquals(this.ErtOrdernrField, value) != true)) {
                    this.ErtOrdernrField = value;
                    this.RaisePropertyChanged("ErtOrdernr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Kund {
            get {
                return this.KundField;
            }
            set {
                if ((object.ReferenceEquals(this.KundField, value) != true)) {
                    this.KundField = value;
                    this.RaisePropertyChanged("Kund");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KundNamn {
            get {
                return this.KundNamnField;
            }
            set {
                if ((object.ReferenceEquals(this.KundNamnField, value) != true)) {
                    this.KundNamnField = value;
                    this.RaisePropertyChanged("KundNamn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderAdminID {
            get {
                return this.OrderAdminIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderAdminIDField, value) != true)) {
                    this.OrderAdminIDField = value;
                    this.RaisePropertyChanged("OrderAdminID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderAdminNamn {
            get {
                return this.OrderAdminNamnField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderAdminNamnField, value) != true)) {
                    this.OrderAdminNamnField = value;
                    this.RaisePropertyChanged("OrderAdminNamn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OrderDatum {
            get {
                return this.OrderDatumField;
            }
            set {
                if ((this.OrderDatumField.Equals(value) != true)) {
                    this.OrderDatumField = value;
                    this.RaisePropertyChanged("OrderDatum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VartOrdernr {
            get {
                return this.VartOrdernrField;
            }
            set {
                if ((object.ReferenceEquals(this.VartOrdernrField, value) != true)) {
                    this.VartOrdernrField = value;
                    this.RaisePropertyChanged("VartOrdernr");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceRadListCL", Namespace="http://schemas.datacontract.org/2004/07/SManApi")]
    [System.SerializableAttribute()]
    public partial class ServiceRadListCL : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AnlaggningsnrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArbetsordernrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AvdelningField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FabrikatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdNrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KundensPosNrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RadNrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VartOrdernrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VentilKategoriField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VentiltypField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int hosKundField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int klarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int paVerkstadField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Anlaggningsnr {
            get {
                return this.AnlaggningsnrField;
            }
            set {
                if ((object.ReferenceEquals(this.AnlaggningsnrField, value) != true)) {
                    this.AnlaggningsnrField = value;
                    this.RaisePropertyChanged("Anlaggningsnr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Arbetsordernr {
            get {
                return this.ArbetsordernrField;
            }
            set {
                if ((object.ReferenceEquals(this.ArbetsordernrField, value) != true)) {
                    this.ArbetsordernrField = value;
                    this.RaisePropertyChanged("Arbetsordernr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Avdelning {
            get {
                return this.AvdelningField;
            }
            set {
                if ((object.ReferenceEquals(this.AvdelningField, value) != true)) {
                    this.AvdelningField = value;
                    this.RaisePropertyChanged("Avdelning");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dn {
            get {
                return this.DnField;
            }
            set {
                if ((object.ReferenceEquals(this.DnField, value) != true)) {
                    this.DnField = value;
                    this.RaisePropertyChanged("Dn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrCode {
            get {
                return this.ErrCodeField;
            }
            set {
                if ((this.ErrCodeField.Equals(value) != true)) {
                    this.ErrCodeField = value;
                    this.RaisePropertyChanged("ErrCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrMessage {
            get {
                return this.ErrMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrMessageField, value) != true)) {
                    this.ErrMessageField = value;
                    this.RaisePropertyChanged("ErrMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fabrikat {
            get {
                return this.FabrikatField;
            }
            set {
                if ((object.ReferenceEquals(this.FabrikatField, value) != true)) {
                    this.FabrikatField = value;
                    this.RaisePropertyChanged("Fabrikat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdNr {
            get {
                return this.IdNrField;
            }
            set {
                if ((object.ReferenceEquals(this.IdNrField, value) != true)) {
                    this.IdNrField = value;
                    this.RaisePropertyChanged("IdNr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KundensPosNr {
            get {
                return this.KundensPosNrField;
            }
            set {
                if ((object.ReferenceEquals(this.KundensPosNrField, value) != true)) {
                    this.KundensPosNrField = value;
                    this.RaisePropertyChanged("KundensPosNr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pn {
            get {
                return this.PnField;
            }
            set {
                if ((object.ReferenceEquals(this.PnField, value) != true)) {
                    this.PnField = value;
                    this.RaisePropertyChanged("Pn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RadNr {
            get {
                return this.RadNrField;
            }
            set {
                if ((this.RadNrField.Equals(value) != true)) {
                    this.RadNrField = value;
                    this.RaisePropertyChanged("RadNr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VartOrdernr {
            get {
                return this.VartOrdernrField;
            }
            set {
                if ((object.ReferenceEquals(this.VartOrdernrField, value) != true)) {
                    this.VartOrdernrField = value;
                    this.RaisePropertyChanged("VartOrdernr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VentilKategori {
            get {
                return this.VentilKategoriField;
            }
            set {
                if ((object.ReferenceEquals(this.VentilKategoriField, value) != true)) {
                    this.VentilKategoriField = value;
                    this.RaisePropertyChanged("VentilKategori");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ventiltyp {
            get {
                return this.VentiltypField;
            }
            set {
                if ((object.ReferenceEquals(this.VentiltypField, value) != true)) {
                    this.VentiltypField = value;
                    this.RaisePropertyChanged("Ventiltyp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int hosKund {
            get {
                return this.hosKundField;
            }
            set {
                if ((this.hosKundField.Equals(value) != true)) {
                    this.hosKundField = value;
                    this.RaisePropertyChanged("hosKund");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int klar {
            get {
                return this.klarField;
            }
            set {
                if ((this.klarField.Equals(value) != true)) {
                    this.klarField = value;
                    this.RaisePropertyChanged("klar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int paVerkstad {
            get {
                return this.paVerkstadField;
            }
            set {
                if ((this.paVerkstadField.Equals(value) != true)) {
                    this.paVerkstadField = value;
                    this.RaisePropertyChanged("paVerkstad");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceRadCL", Namespace="http://schemas.datacontract.org/2004/07/SManApi")]
    [System.SerializableAttribute()]
    public partial class ServiceRadCL : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AlternateKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AnmarkningField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AntalBoxpackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AntalBrostpackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArbeteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArbetsordernrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BoxpackMaterialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BoxpackningField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrostpackMaterialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrostpackningField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KontrollField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LagesstallArbeteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LagesstallDelarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LagesstallKontrollField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OvrKommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RadnrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReparatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Reparator2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Reparator3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReservdelarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StalldonArbeteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StalldonDelarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StalldonKontrollField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VartOrdernrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VentilIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int hosKundField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int klarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int paVerkstadField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlternateKey {
            get {
                return this.AlternateKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.AlternateKeyField, value) != true)) {
                    this.AlternateKeyField = value;
                    this.RaisePropertyChanged("AlternateKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Anmarkning {
            get {
                return this.AnmarkningField;
            }
            set {
                if ((object.ReferenceEquals(this.AnmarkningField, value) != true)) {
                    this.AnmarkningField = value;
                    this.RaisePropertyChanged("Anmarkning");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AntalBoxpack {
            get {
                return this.AntalBoxpackField;
            }
            set {
                if ((this.AntalBoxpackField.Equals(value) != true)) {
                    this.AntalBoxpackField = value;
                    this.RaisePropertyChanged("AntalBoxpack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AntalBrostpack {
            get {
                return this.AntalBrostpackField;
            }
            set {
                if ((this.AntalBrostpackField.Equals(value) != true)) {
                    this.AntalBrostpackField = value;
                    this.RaisePropertyChanged("AntalBrostpack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Arbete {
            get {
                return this.ArbeteField;
            }
            set {
                if ((object.ReferenceEquals(this.ArbeteField, value) != true)) {
                    this.ArbeteField = value;
                    this.RaisePropertyChanged("Arbete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Arbetsordernr {
            get {
                return this.ArbetsordernrField;
            }
            set {
                if ((object.ReferenceEquals(this.ArbetsordernrField, value) != true)) {
                    this.ArbetsordernrField = value;
                    this.RaisePropertyChanged("Arbetsordernr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BoxpackMaterial {
            get {
                return this.BoxpackMaterialField;
            }
            set {
                if ((object.ReferenceEquals(this.BoxpackMaterialField, value) != true)) {
                    this.BoxpackMaterialField = value;
                    this.RaisePropertyChanged("BoxpackMaterial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Boxpackning {
            get {
                return this.BoxpackningField;
            }
            set {
                if ((object.ReferenceEquals(this.BoxpackningField, value) != true)) {
                    this.BoxpackningField = value;
                    this.RaisePropertyChanged("Boxpackning");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BrostpackMaterial {
            get {
                return this.BrostpackMaterialField;
            }
            set {
                if ((object.ReferenceEquals(this.BrostpackMaterialField, value) != true)) {
                    this.BrostpackMaterialField = value;
                    this.RaisePropertyChanged("BrostpackMaterial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Brostpackning {
            get {
                return this.BrostpackningField;
            }
            set {
                if ((object.ReferenceEquals(this.BrostpackningField, value) != true)) {
                    this.BrostpackningField = value;
                    this.RaisePropertyChanged("Brostpackning");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrCode {
            get {
                return this.ErrCodeField;
            }
            set {
                if ((this.ErrCodeField.Equals(value) != true)) {
                    this.ErrCodeField = value;
                    this.RaisePropertyChanged("ErrCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrMessage {
            get {
                return this.ErrMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrMessageField, value) != true)) {
                    this.ErrMessageField = value;
                    this.RaisePropertyChanged("ErrMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Kontroll {
            get {
                return this.KontrollField;
            }
            set {
                if ((object.ReferenceEquals(this.KontrollField, value) != true)) {
                    this.KontrollField = value;
                    this.RaisePropertyChanged("Kontroll");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LagesstallArbete {
            get {
                return this.LagesstallArbeteField;
            }
            set {
                if ((object.ReferenceEquals(this.LagesstallArbeteField, value) != true)) {
                    this.LagesstallArbeteField = value;
                    this.RaisePropertyChanged("LagesstallArbete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LagesstallDelar {
            get {
                return this.LagesstallDelarField;
            }
            set {
                if ((object.ReferenceEquals(this.LagesstallDelarField, value) != true)) {
                    this.LagesstallDelarField = value;
                    this.RaisePropertyChanged("LagesstallDelar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LagesstallKontroll {
            get {
                return this.LagesstallKontrollField;
            }
            set {
                if ((object.ReferenceEquals(this.LagesstallKontrollField, value) != true)) {
                    this.LagesstallKontrollField = value;
                    this.RaisePropertyChanged("LagesstallKontroll");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OvrKomment {
            get {
                return this.OvrKommentField;
            }
            set {
                if ((object.ReferenceEquals(this.OvrKommentField, value) != true)) {
                    this.OvrKommentField = value;
                    this.RaisePropertyChanged("OvrKomment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Radnr {
            get {
                return this.RadnrField;
            }
            set {
                if ((this.RadnrField.Equals(value) != true)) {
                    this.RadnrField = value;
                    this.RaisePropertyChanged("Radnr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reparator {
            get {
                return this.ReparatorField;
            }
            set {
                if ((object.ReferenceEquals(this.ReparatorField, value) != true)) {
                    this.ReparatorField = value;
                    this.RaisePropertyChanged("Reparator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reparator2 {
            get {
                return this.Reparator2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Reparator2Field, value) != true)) {
                    this.Reparator2Field = value;
                    this.RaisePropertyChanged("Reparator2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reparator3 {
            get {
                return this.Reparator3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Reparator3Field, value) != true)) {
                    this.Reparator3Field = value;
                    this.RaisePropertyChanged("Reparator3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reservdelar {
            get {
                return this.ReservdelarField;
            }
            set {
                if ((object.ReferenceEquals(this.ReservdelarField, value) != true)) {
                    this.ReservdelarField = value;
                    this.RaisePropertyChanged("Reservdelar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StalldonArbete {
            get {
                return this.StalldonArbeteField;
            }
            set {
                if ((object.ReferenceEquals(this.StalldonArbeteField, value) != true)) {
                    this.StalldonArbeteField = value;
                    this.RaisePropertyChanged("StalldonArbete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StalldonDelar {
            get {
                return this.StalldonDelarField;
            }
            set {
                if ((object.ReferenceEquals(this.StalldonDelarField, value) != true)) {
                    this.StalldonDelarField = value;
                    this.RaisePropertyChanged("StalldonDelar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StalldonKontroll {
            get {
                return this.StalldonKontrollField;
            }
            set {
                if ((object.ReferenceEquals(this.StalldonKontrollField, value) != true)) {
                    this.StalldonKontrollField = value;
                    this.RaisePropertyChanged("StalldonKontroll");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VartOrdernr {
            get {
                return this.VartOrdernrField;
            }
            set {
                if ((object.ReferenceEquals(this.VartOrdernrField, value) != true)) {
                    this.VartOrdernrField = value;
                    this.RaisePropertyChanged("VartOrdernr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VentilID {
            get {
                return this.VentilIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VentilIDField, value) != true)) {
                    this.VentilIDField = value;
                    this.RaisePropertyChanged("VentilID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int hosKund {
            get {
                return this.hosKundField;
            }
            set {
                if ((this.hosKundField.Equals(value) != true)) {
                    this.hosKundField = value;
                    this.RaisePropertyChanged("hosKund");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int klar {
            get {
                return this.klarField;
            }
            set {
                if ((this.klarField.Equals(value) != true)) {
                    this.klarField = value;
                    this.RaisePropertyChanged("klar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int paVerkstad {
            get {
                return this.paVerkstadField;
            }
            set {
                if ((this.paVerkstadField.Equals(value) != true)) {
                    this.paVerkstadField = value;
                    this.RaisePropertyChanged("paVerkstad");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VentilCL", Namespace="http://schemas.datacontract.org/2004/07/SManApi")]
    [System.SerializableAttribute()]
    public partial class VentilCL : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AnlaggningsnrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AvdelningField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Dn2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FabrikatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdNrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KundIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LagesstallFabrikatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LagesstallIDNrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LagesstallartypField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OppningstryckField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Pn2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StalldonArtnrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StalldonFabrikatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StalldonIDNrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StalldonstypField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VentilIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VentilkatIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VentilkategoriField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VentiltypField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool forceSaveField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Anlaggningsnr {
            get {
                return this.AnlaggningsnrField;
            }
            set {
                if ((object.ReferenceEquals(this.AnlaggningsnrField, value) != true)) {
                    this.AnlaggningsnrField = value;
                    this.RaisePropertyChanged("Anlaggningsnr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Avdelning {
            get {
                return this.AvdelningField;
            }
            set {
                if ((object.ReferenceEquals(this.AvdelningField, value) != true)) {
                    this.AvdelningField = value;
                    this.RaisePropertyChanged("Avdelning");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dn {
            get {
                return this.DnField;
            }
            set {
                if ((object.ReferenceEquals(this.DnField, value) != true)) {
                    this.DnField = value;
                    this.RaisePropertyChanged("Dn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dn2 {
            get {
                return this.Dn2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Dn2Field, value) != true)) {
                    this.Dn2Field = value;
                    this.RaisePropertyChanged("Dn2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrCode {
            get {
                return this.ErrCodeField;
            }
            set {
                if ((this.ErrCodeField.Equals(value) != true)) {
                    this.ErrCodeField = value;
                    this.RaisePropertyChanged("ErrCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrMessage {
            get {
                return this.ErrMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrMessageField, value) != true)) {
                    this.ErrMessageField = value;
                    this.RaisePropertyChanged("ErrMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fabrikat {
            get {
                return this.FabrikatField;
            }
            set {
                if ((object.ReferenceEquals(this.FabrikatField, value) != true)) {
                    this.FabrikatField = value;
                    this.RaisePropertyChanged("Fabrikat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdNr {
            get {
                return this.IdNrField;
            }
            set {
                if ((object.ReferenceEquals(this.IdNrField, value) != true)) {
                    this.IdNrField = value;
                    this.RaisePropertyChanged("IdNr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KundID {
            get {
                return this.KundIDField;
            }
            set {
                if ((object.ReferenceEquals(this.KundIDField, value) != true)) {
                    this.KundIDField = value;
                    this.RaisePropertyChanged("KundID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LagesstallFabrikat {
            get {
                return this.LagesstallFabrikatField;
            }
            set {
                if ((object.ReferenceEquals(this.LagesstallFabrikatField, value) != true)) {
                    this.LagesstallFabrikatField = value;
                    this.RaisePropertyChanged("LagesstallFabrikat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LagesstallIDNr {
            get {
                return this.LagesstallIDNrField;
            }
            set {
                if ((object.ReferenceEquals(this.LagesstallIDNrField, value) != true)) {
                    this.LagesstallIDNrField = value;
                    this.RaisePropertyChanged("LagesstallIDNr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lagesstallartyp {
            get {
                return this.LagesstallartypField;
            }
            set {
                if ((object.ReferenceEquals(this.LagesstallartypField, value) != true)) {
                    this.LagesstallartypField = value;
                    this.RaisePropertyChanged("Lagesstallartyp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Oppningstryck {
            get {
                return this.OppningstryckField;
            }
            set {
                if ((this.OppningstryckField.Equals(value) != true)) {
                    this.OppningstryckField = value;
                    this.RaisePropertyChanged("Oppningstryck");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Plan {
            get {
                return this.PlanField;
            }
            set {
                if ((object.ReferenceEquals(this.PlanField, value) != true)) {
                    this.PlanField = value;
                    this.RaisePropertyChanged("Plan");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pn {
            get {
                return this.PnField;
            }
            set {
                if ((object.ReferenceEquals(this.PnField, value) != true)) {
                    this.PnField = value;
                    this.RaisePropertyChanged("Pn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pn2 {
            get {
                return this.Pn2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Pn2Field, value) != true)) {
                    this.Pn2Field = value;
                    this.RaisePropertyChanged("Pn2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Position {
            get {
                return this.PositionField;
            }
            set {
                if ((object.ReferenceEquals(this.PositionField, value) != true)) {
                    this.PositionField = value;
                    this.RaisePropertyChanged("Position");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Rum {
            get {
                return this.RumField;
            }
            set {
                if ((object.ReferenceEquals(this.RumField, value) != true)) {
                    this.RumField = value;
                    this.RaisePropertyChanged("Rum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StalldonArtnr {
            get {
                return this.StalldonArtnrField;
            }
            set {
                if ((object.ReferenceEquals(this.StalldonArtnrField, value) != true)) {
                    this.StalldonArtnrField = value;
                    this.RaisePropertyChanged("StalldonArtnr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StalldonFabrikat {
            get {
                return this.StalldonFabrikatField;
            }
            set {
                if ((object.ReferenceEquals(this.StalldonFabrikatField, value) != true)) {
                    this.StalldonFabrikatField = value;
                    this.RaisePropertyChanged("StalldonFabrikat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StalldonIDNr {
            get {
                return this.StalldonIDNrField;
            }
            set {
                if ((object.ReferenceEquals(this.StalldonIDNrField, value) != true)) {
                    this.StalldonIDNrField = value;
                    this.RaisePropertyChanged("StalldonIDNr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Stalldonstyp {
            get {
                return this.StalldonstypField;
            }
            set {
                if ((object.ReferenceEquals(this.StalldonstypField, value) != true)) {
                    this.StalldonstypField = value;
                    this.RaisePropertyChanged("Stalldonstyp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VentilID {
            get {
                return this.VentilIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VentilIDField, value) != true)) {
                    this.VentilIDField = value;
                    this.RaisePropertyChanged("VentilID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VentilkatID {
            get {
                return this.VentilkatIDField;
            }
            set {
                if ((this.VentilkatIDField.Equals(value) != true)) {
                    this.VentilkatIDField = value;
                    this.RaisePropertyChanged("VentilkatID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ventilkategori {
            get {
                return this.VentilkategoriField;
            }
            set {
                if ((object.ReferenceEquals(this.VentilkategoriField, value) != true)) {
                    this.VentilkategoriField = value;
                    this.RaisePropertyChanged("Ventilkategori");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ventiltyp {
            get {
                return this.VentiltypField;
            }
            set {
                if ((object.ReferenceEquals(this.VentiltypField, value) != true)) {
                    this.VentiltypField = value;
                    this.RaisePropertyChanged("Ventiltyp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool forceSave {
            get {
                return this.forceSaveField;
            }
            set {
                if ((this.forceSaveField.Equals(value) != true)) {
                    this.forceSaveField = value;
                    this.RaisePropertyChanged("forceSave");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VentilKategoriCL", Namespace="http://schemas.datacontract.org/2004/07/SManApi")]
    [System.SerializableAttribute()]
    public partial class VentilKategoriCL : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VentilkatIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VentilkategoriField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrCode {
            get {
                return this.ErrCodeField;
            }
            set {
                if ((this.ErrCodeField.Equals(value) != true)) {
                    this.ErrCodeField = value;
                    this.RaisePropertyChanged("ErrCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrMessage {
            get {
                return this.ErrMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrMessageField, value) != true)) {
                    this.ErrMessageField = value;
                    this.RaisePropertyChanged("ErrMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VentilkatID {
            get {
                return this.VentilkatIDField;
            }
            set {
                if ((this.VentilkatIDField.Equals(value) != true)) {
                    this.VentilkatIDField = value;
                    this.RaisePropertyChanged("VentilkatID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ventilkategori {
            get {
                return this.VentilkategoriField;
            }
            set {
                if ((object.ReferenceEquals(this.VentilkategoriField, value) != true)) {
                    this.VentilkategoriField = value;
                    this.RaisePropertyChanged("Ventilkategori");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FabrikatCL", Namespace="http://schemas.datacontract.org/2004/07/SManApi")]
    [System.SerializableAttribute()]
    public partial class FabrikatCL : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FabrikatField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrCode {
            get {
                return this.ErrCodeField;
            }
            set {
                if ((this.ErrCodeField.Equals(value) != true)) {
                    this.ErrCodeField = value;
                    this.RaisePropertyChanged("ErrCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrMessage {
            get {
                return this.ErrMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrMessageField, value) != true)) {
                    this.ErrMessageField = value;
                    this.RaisePropertyChanged("ErrMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fabrikat {
            get {
                return this.FabrikatField;
            }
            set {
                if ((object.ReferenceEquals(this.FabrikatField, value) != true)) {
                    this.FabrikatField = value;
                    this.RaisePropertyChanged("Fabrikat");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DnCL", Namespace="http://schemas.datacontract.org/2004/07/SManApi")]
    [System.SerializableAttribute()]
    public partial class DnCL : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dn {
            get {
                return this.DnField;
            }
            set {
                if ((object.ReferenceEquals(this.DnField, value) != true)) {
                    this.DnField = value;
                    this.RaisePropertyChanged("Dn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrCode {
            get {
                return this.ErrCodeField;
            }
            set {
                if ((this.ErrCodeField.Equals(value) != true)) {
                    this.ErrCodeField = value;
                    this.RaisePropertyChanged("ErrCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrMessage {
            get {
                return this.ErrMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrMessageField, value) != true)) {
                    this.ErrMessageField = value;
                    this.RaisePropertyChanged("ErrMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PnCL", Namespace="http://schemas.datacontract.org/2004/07/SManApi")]
    [System.SerializableAttribute()]
    public partial class PnCL : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PnField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrCode {
            get {
                return this.ErrCodeField;
            }
            set {
                if ((this.ErrCodeField.Equals(value) != true)) {
                    this.ErrCodeField = value;
                    this.RaisePropertyChanged("ErrCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrMessage {
            get {
                return this.ErrMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrMessageField, value) != true)) {
                    this.ErrMessageField = value;
                    this.RaisePropertyChanged("ErrMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pn {
            get {
                return this.PnField;
            }
            set {
                if ((object.ReferenceEquals(this.PnField, value) != true)) {
                    this.PnField = value;
                    this.RaisePropertyChanged("Pn");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArtikelCL", Namespace="http://schemas.datacontract.org/2004/07/SManApi")]
    [System.SerializableAttribute()]
    public partial class ArtikelCL : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Anm1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Anm2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArtnamnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArtnrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LevNamnField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Anm1 {
            get {
                return this.Anm1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Anm1Field, value) != true)) {
                    this.Anm1Field = value;
                    this.RaisePropertyChanged("Anm1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Anm2 {
            get {
                return this.Anm2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Anm2Field, value) != true)) {
                    this.Anm2Field = value;
                    this.RaisePropertyChanged("Anm2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Artnamn {
            get {
                return this.ArtnamnField;
            }
            set {
                if ((object.ReferenceEquals(this.ArtnamnField, value) != true)) {
                    this.ArtnamnField = value;
                    this.RaisePropertyChanged("Artnamn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Artnr {
            get {
                return this.ArtnrField;
            }
            set {
                if ((object.ReferenceEquals(this.ArtnrField, value) != true)) {
                    this.ArtnrField = value;
                    this.RaisePropertyChanged("Artnr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrCode {
            get {
                return this.ErrCodeField;
            }
            set {
                if ((this.ErrCodeField.Equals(value) != true)) {
                    this.ErrCodeField = value;
                    this.RaisePropertyChanged("ErrCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrMessage {
            get {
                return this.ErrMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrMessageField, value) != true)) {
                    this.ErrMessageField = value;
                    this.RaisePropertyChanged("ErrMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LevID {
            get {
                return this.LevIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LevIDField, value) != true)) {
                    this.LevIDField = value;
                    this.RaisePropertyChanged("LevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LevNamn {
            get {
                return this.LevNamnField;
            }
            set {
                if ((object.ReferenceEquals(this.LevNamnField, value) != true)) {
                    this.LevNamnField = value;
                    this.RaisePropertyChanged("LevNamn");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReservdelCL", Namespace="http://schemas.datacontract.org/2004/07/SManApi")]
    [System.SerializableAttribute()]
    public partial class ReservdelCL : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AntalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArtNamnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArtnrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EnhetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FakturerasField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RadnrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReservNrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VartOrdernrField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Antal {
            get {
                return this.AntalField;
            }
            set {
                if ((this.AntalField.Equals(value) != true)) {
                    this.AntalField = value;
                    this.RaisePropertyChanged("Antal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArtNamn {
            get {
                return this.ArtNamnField;
            }
            set {
                if ((object.ReferenceEquals(this.ArtNamnField, value) != true)) {
                    this.ArtNamnField = value;
                    this.RaisePropertyChanged("ArtNamn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Artnr {
            get {
                return this.ArtnrField;
            }
            set {
                if ((object.ReferenceEquals(this.ArtnrField, value) != true)) {
                    this.ArtnrField = value;
                    this.RaisePropertyChanged("Artnr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Enhet {
            get {
                return this.EnhetField;
            }
            set {
                if ((object.ReferenceEquals(this.EnhetField, value) != true)) {
                    this.EnhetField = value;
                    this.RaisePropertyChanged("Enhet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrCode {
            get {
                return this.ErrCodeField;
            }
            set {
                if ((this.ErrCodeField.Equals(value) != true)) {
                    this.ErrCodeField = value;
                    this.RaisePropertyChanged("ErrCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrMessage {
            get {
                return this.ErrMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrMessageField, value) != true)) {
                    this.ErrMessageField = value;
                    this.RaisePropertyChanged("ErrMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Faktureras {
            get {
                return this.FakturerasField;
            }
            set {
                if ((this.FakturerasField.Equals(value) != true)) {
                    this.FakturerasField = value;
                    this.RaisePropertyChanged("Faktureras");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LevID {
            get {
                return this.LevIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LevIDField, value) != true)) {
                    this.LevIDField = value;
                    this.RaisePropertyChanged("LevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Radnr {
            get {
                return this.RadnrField;
            }
            set {
                if ((this.RadnrField.Equals(value) != true)) {
                    this.RadnrField = value;
                    this.RaisePropertyChanged("Radnr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReservNr {
            get {
                return this.ReservNrField;
            }
            set {
                if ((this.ReservNrField.Equals(value) != true)) {
                    this.ReservNrField = value;
                    this.RaisePropertyChanged("ReservNr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VartOrdernr {
            get {
                return this.VartOrdernrField;
            }
            set {
                if ((object.ReferenceEquals(this.VartOrdernrField, value) != true)) {
                    this.VartOrdernrField = value;
                    this.RaisePropertyChanged("VartOrdernr");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OpenDateCL", Namespace="http://schemas.datacontract.org/2004/07/SManApi")]
    [System.SerializableAttribute()]
    public partial class OpenDateCL : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DatumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Datum {
            get {
                return this.DatumField;
            }
            set {
                if ((this.DatumField.Equals(value) != true)) {
                    this.DatumField = value;
                    this.RaisePropertyChanged("Datum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrCode {
            get {
                return this.ErrCodeField;
            }
            set {
                if ((this.ErrCodeField.Equals(value) != true)) {
                    this.ErrCodeField = value;
                    this.RaisePropertyChanged("ErrCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrMessage {
            get {
                return this.ErrMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrMessageField, value) != true)) {
                    this.ErrMessageField = value;
                    this.RaisePropertyChanged("ErrMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServRadRepTidCL", Namespace="http://schemas.datacontract.org/2004/07/SManApi")]
    [System.SerializableAttribute()]
    public partial class ServRadRepTidCL : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AnvIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DatumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SrAltKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AnvID {
            get {
                return this.AnvIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AnvIDField, value) != true)) {
                    this.AnvIDField = value;
                    this.RaisePropertyChanged("AnvID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Datum {
            get {
                return this.DatumField;
            }
            set {
                if ((this.DatumField.Equals(value) != true)) {
                    this.DatumField = value;
                    this.RaisePropertyChanged("Datum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrCode {
            get {
                return this.ErrCodeField;
            }
            set {
                if ((this.ErrCodeField.Equals(value) != true)) {
                    this.ErrCodeField = value;
                    this.RaisePropertyChanged("ErrCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrMessage {
            get {
                return this.ErrMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrMessageField, value) != true)) {
                    this.ErrMessageField = value;
                    this.RaisePropertyChanged("ErrMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SrAltKey {
            get {
                return this.SrAltKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.SrAltKeyField, value) != true)) {
                    this.SrAltKeyField = value;
                    this.RaisePropertyChanged("SrAltKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Tid {
            get {
                return this.TidField;
            }
            set {
                if ((this.TidField.Equals(value) != true)) {
                    this.TidField = value;
                    this.RaisePropertyChanged("Tid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PictureCL", Namespace="http://schemas.datacontract.org/2004/07/SManApi")]
    [System.SerializableAttribute()]
    public partial class PictureCL : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BildNrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PictCatIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PictIdentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RadnrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VartOrdernrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long pictSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string pictTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BildNr {
            get {
                return this.BildNrField;
            }
            set {
                if ((this.BildNrField.Equals(value) != true)) {
                    this.BildNrField = value;
                    this.RaisePropertyChanged("BildNr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrCode {
            get {
                return this.ErrCodeField;
            }
            set {
                if ((this.ErrCodeField.Equals(value) != true)) {
                    this.ErrCodeField = value;
                    this.RaisePropertyChanged("ErrCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrMessage {
            get {
                return this.ErrMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrMessageField, value) != true)) {
                    this.ErrMessageField = value;
                    this.RaisePropertyChanged("ErrMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PictCatID {
            get {
                return this.PictCatIDField;
            }
            set {
                if ((this.PictCatIDField.Equals(value) != true)) {
                    this.PictCatIDField = value;
                    this.RaisePropertyChanged("PictCatID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PictIdent {
            get {
                return this.PictIdentField;
            }
            set {
                if ((object.ReferenceEquals(this.PictIdentField, value) != true)) {
                    this.PictIdentField = value;
                    this.RaisePropertyChanged("PictIdent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Radnr {
            get {
                return this.RadnrField;
            }
            set {
                if ((this.RadnrField.Equals(value) != true)) {
                    this.RadnrField = value;
                    this.RaisePropertyChanged("Radnr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VartOrdernr {
            get {
                return this.VartOrdernrField;
            }
            set {
                if ((object.ReferenceEquals(this.VartOrdernrField, value) != true)) {
                    this.VartOrdernrField = value;
                    this.RaisePropertyChanged("VartOrdernr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long pictSize {
            get {
                return this.pictSizeField;
            }
            set {
                if ((this.pictSizeField.Equals(value) != true)) {
                    this.pictSizeField = value;
                    this.RaisePropertyChanged("pictSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string pictType {
            get {
                return this.pictTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.pictTypeField, value) != true)) {
                    this.pictTypeField = value;
                    this.RaisePropertyChanged("pictType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StandardTextCL", Namespace="http://schemas.datacontract.org/2004/07/SManApi")]
    [System.SerializableAttribute()]
    public partial class StandardTextCL : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int KategoriField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KategoriBeskrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StdTextIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ventilkatIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrCode {
            get {
                return this.ErrCodeField;
            }
            set {
                if ((this.ErrCodeField.Equals(value) != true)) {
                    this.ErrCodeField = value;
                    this.RaisePropertyChanged("ErrCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrMessage {
            get {
                return this.ErrMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrMessageField, value) != true)) {
                    this.ErrMessageField = value;
                    this.RaisePropertyChanged("ErrMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Kategori {
            get {
                return this.KategoriField;
            }
            set {
                if ((this.KategoriField.Equals(value) != true)) {
                    this.KategoriField = value;
                    this.RaisePropertyChanged("Kategori");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KategoriBeskr {
            get {
                return this.KategoriBeskrField;
            }
            set {
                if ((object.ReferenceEquals(this.KategoriBeskrField, value) != true)) {
                    this.KategoriBeskrField = value;
                    this.RaisePropertyChanged("KategoriBeskr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StdTextID {
            get {
                return this.StdTextIDField;
            }
            set {
                if ((object.ReferenceEquals(this.StdTextIDField, value) != true)) {
                    this.StdTextIDField = value;
                    this.RaisePropertyChanged("StdTextID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ventilkatID {
            get {
                return this.ventilkatIDField;
            }
            set {
                if ((this.ventilkatIDField.Equals(value) != true)) {
                    this.ventilkatIDField = value;
                    this.RaisePropertyChanged("ventilkatID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PictCatCL", Namespace="http://schemas.datacontract.org/2004/07/SManApi")]
    [System.SerializableAttribute()]
    public partial class PictCatCL : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PictCatIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PictCatNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StepField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrCode {
            get {
                return this.ErrCodeField;
            }
            set {
                if ((this.ErrCodeField.Equals(value) != true)) {
                    this.ErrCodeField = value;
                    this.RaisePropertyChanged("ErrCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrMessage {
            get {
                return this.ErrMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrMessageField, value) != true)) {
                    this.ErrMessageField = value;
                    this.RaisePropertyChanged("ErrMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PictCatID {
            get {
                return this.PictCatIDField;
            }
            set {
                if ((this.PictCatIDField.Equals(value) != true)) {
                    this.PictCatIDField = value;
                    this.RaisePropertyChanged("PictCatID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PictCatName {
            get {
                return this.PictCatNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PictCatNameField, value) != true)) {
                    this.PictCatNameField = value;
                    this.RaisePropertyChanged("PictCatName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Step {
            get {
                return this.StepField;
            }
            set {
                if ((this.StepField.Equals(value) != true)) {
                    this.StepField = value;
                    this.RaisePropertyChanged("Step");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VersionCL", Namespace="http://schemas.datacontract.org/2004/07/SManApi")]
    [System.SerializableAttribute()]
    public partial class VersionCL : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string APIVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int dbVersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string APIVersion {
            get {
                return this.APIVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.APIVersionField, value) != true)) {
                    this.APIVersionField = value;
                    this.RaisePropertyChanged("APIVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrCode {
            get {
                return this.ErrCodeField;
            }
            set {
                if ((this.ErrCodeField.Equals(value) != true)) {
                    this.ErrCodeField = value;
                    this.RaisePropertyChanged("ErrCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrMessage {
            get {
                return this.ErrMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrMessageField, value) != true)) {
                    this.ErrMessageField = value;
                    this.RaisePropertyChanged("ErrMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int dbVersion {
            get {
                return this.dbVersionField;
            }
            set {
                if ((this.dbVersionField.Equals(value) != true)) {
                    this.dbVersionField = value;
                    this.RaisePropertyChanged("dbVersion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SmServ.ISmServ")]
    public interface ISmServ {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/login", ReplyAction="http://tempuri.org/ISmServ/loginResponse")]
        string login(string AnvID, string pwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/login", ReplyAction="http://tempuri.org/ISmServ/loginResponse")]
        System.Threading.Tasks.Task<string> loginAsync(string AnvID, string pwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/getReparator", ReplyAction="http://tempuri.org/ISmServ/getReparatorResponse")]
        WfTestValveComment.SmServ.ReparatorCL getReparator(string ident);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/getReparator", ReplyAction="http://tempuri.org/ISmServ/getReparatorResponse")]
        System.Threading.Tasks.Task<WfTestValveComment.SmServ.ReparatorCL> getReparatorAsync(string ident);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/getReparators", ReplyAction="http://tempuri.org/ISmServ/getReparatorsResponse")]
        WfTestValveComment.SmServ.ReparatorCL[] getReparators(string ident);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/getReparators", ReplyAction="http://tempuri.org/ISmServ/getReparatorsResponse")]
        System.Threading.Tasks.Task<WfTestValveComment.SmServ.ReparatorCL[]> getReparatorsAsync(string ident);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/getServHuvForUser", ReplyAction="http://tempuri.org/ISmServ/getServHuvForUserResponse")]
        WfTestValveComment.SmServ.ServiceHuvudCL[] getServHuvForUser(string ident);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/getServHuvForUser", ReplyAction="http://tempuri.org/ISmServ/getServHuvForUserResponse")]
        System.Threading.Tasks.Task<WfTestValveComment.SmServ.ServiceHuvudCL[]> getServHuvForUserAsync(string ident);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/getServHuv", ReplyAction="http://tempuri.org/ISmServ/getServHuvResponse")]
        WfTestValveComment.SmServ.ServiceHuvudCL getServHuv(string ident, string vartOrdernr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/getServHuv", ReplyAction="http://tempuri.org/ISmServ/getServHuvResponse")]
        System.Threading.Tasks.Task<WfTestValveComment.SmServ.ServiceHuvudCL> getServHuvAsync(string ident, string vartOrdernr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/getAllServRad", ReplyAction="http://tempuri.org/ISmServ/getAllServRadResponse")]
        WfTestValveComment.SmServ.ServiceRadListCL[] getAllServRad(string ident, string vartOrdernr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/getAllServRad", ReplyAction="http://tempuri.org/ISmServ/getAllServRadResponse")]
        System.Threading.Tasks.Task<WfTestValveComment.SmServ.ServiceRadListCL[]> getAllServRadAsync(string ident, string vartOrdernr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/getServRad", ReplyAction="http://tempuri.org/ISmServ/getServRadResponse")]
        WfTestValveComment.SmServ.ServiceRadCL getServRad(string ident, string vartOrdernr, int radnr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/getServRad", ReplyAction="http://tempuri.org/ISmServ/getServRadResponse")]
        System.Threading.Tasks.Task<WfTestValveComment.SmServ.ServiceRadCL> getServRadAsync(string ident, string vartOrdernr, int radnr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/saveServRad", ReplyAction="http://tempuri.org/ISmServ/saveServRadResponse")]
        WfTestValveComment.SmServ.ServiceRadCL saveServRad(string ident, WfTestValveComment.SmServ.ServiceRadCL sr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/saveServRad", ReplyAction="http://tempuri.org/ISmServ/saveServRadResponse")]
        System.Threading.Tasks.Task<WfTestValveComment.SmServ.ServiceRadCL> saveServRadAsync(string ident, WfTestValveComment.SmServ.ServiceRadCL sr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/getVentil", ReplyAction="http://tempuri.org/ISmServ/getVentilResponse")]
        WfTestValveComment.SmServ.VentilCL getVentil(string ident, string ventilID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/getVentil", ReplyAction="http://tempuri.org/ISmServ/getVentilResponse")]
        System.Threading.Tasks.Task<WfTestValveComment.SmServ.VentilCL> getVentilAsync(string ident, string ventilID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/getVentilsForCust", ReplyAction="http://tempuri.org/ISmServ/getVentilsForCustResponse")]
        WfTestValveComment.SmServ.VentilCL[] getVentilsForCust(string ident, string KundID, string position, string IDnr, string ventiltyp, string fabrikat, string anlaggningsnr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/getVentilsForCust", ReplyAction="http://tempuri.org/ISmServ/getVentilsForCustResponse")]
        System.Threading.Tasks.Task<WfTestValveComment.SmServ.VentilCL[]> getVentilsForCustAsync(string ident, string KundID, string position, string IDnr, string ventiltyp, string fabrikat, string anlaggningsnr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/saveVentil", ReplyAction="http://tempuri.org/ISmServ/saveVentilResponse")]
        WfTestValveComment.SmServ.VentilCL saveVentil(string ident, WfTestValveComment.SmServ.VentilCL v);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/saveVentil", ReplyAction="http://tempuri.org/ISmServ/saveVentilResponse")]
        System.Threading.Tasks.Task<WfTestValveComment.SmServ.VentilCL> saveVentilAsync(string ident, WfTestValveComment.SmServ.VentilCL v);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/getVentilKategorier", ReplyAction="http://tempuri.org/ISmServ/getVentilKategorierResponse")]
        WfTestValveComment.SmServ.VentilKategoriCL[] getVentilKategorier(string ident);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/getVentilKategorier", ReplyAction="http://tempuri.org/ISmServ/getVentilKategorierResponse")]
        System.Threading.Tasks.Task<WfTestValveComment.SmServ.VentilKategoriCL[]> getVentilKategorierAsync(string ident);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/getFabrikat", ReplyAction="http://tempuri.org/ISmServ/getFabrikatResponse")]
        WfTestValveComment.SmServ.FabrikatCL[] getFabrikat(string ident);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/getFabrikat", ReplyAction="http://tempuri.org/ISmServ/getFabrikatResponse")]
        System.Threading.Tasks.Task<WfTestValveComment.SmServ.FabrikatCL[]> getFabrikatAsync(string ident);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/getDn", ReplyAction="http://tempuri.org/ISmServ/getDnResponse")]
        WfTestValveComment.SmServ.DnCL[] getDn(string ident);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/getDn", ReplyAction="http://tempuri.org/ISmServ/getDnResponse")]
        System.Threading.Tasks.Task<WfTestValveComment.SmServ.DnCL[]> getDnAsync(string ident);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/getPn", ReplyAction="http://tempuri.org/ISmServ/getPnResponse")]
        WfTestValveComment.SmServ.PnCL[] getPn(string ident);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/getPn", ReplyAction="http://tempuri.org/ISmServ/getPnResponse")]
        System.Threading.Tasks.Task<WfTestValveComment.SmServ.PnCL[]> getPnAsync(string ident);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/getArtList", ReplyAction="http://tempuri.org/ISmServ/getArtListResponse")]
        WfTestValveComment.SmServ.ArtikelCL[] getArtList(string ident, string ArtnrFilter, string ArtnamnFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/getArtList", ReplyAction="http://tempuri.org/ISmServ/getArtListResponse")]
        System.Threading.Tasks.Task<WfTestValveComment.SmServ.ArtikelCL[]> getArtListAsync(string ident, string ArtnrFilter, string ArtnamnFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/getArtikel", ReplyAction="http://tempuri.org/ISmServ/getArtikelResponse")]
        WfTestValveComment.SmServ.ArtikelCL getArtikel(string ident, string Artnr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/getArtikel", ReplyAction="http://tempuri.org/ISmServ/getArtikelResponse")]
        System.Threading.Tasks.Task<WfTestValveComment.SmServ.ArtikelCL> getArtikelAsync(string ident, string Artnr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/getReservdelsForServiceRad", ReplyAction="http://tempuri.org/ISmServ/getReservdelsForServiceRadResponse")]
        WfTestValveComment.SmServ.ReservdelCL[] getReservdelsForServiceRad(string ident, string VartOrdernr, int RadNr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/getReservdelsForServiceRad", ReplyAction="http://tempuri.org/ISmServ/getReservdelsForServiceRadResponse")]
        System.Threading.Tasks.Task<WfTestValveComment.SmServ.ReservdelCL[]> getReservdelsForServiceRadAsync(string ident, string VartOrdernr, int RadNr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/getReservdel", ReplyAction="http://tempuri.org/ISmServ/getReservdelResponse")]
        WfTestValveComment.SmServ.ReservdelCL getReservdel(string ident, string VartOrdernr, int RadNr, int ReservNr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/getReservdel", ReplyAction="http://tempuri.org/ISmServ/getReservdelResponse")]
        System.Threading.Tasks.Task<WfTestValveComment.SmServ.ReservdelCL> getReservdelAsync(string ident, string VartOrdernr, int RadNr, int ReservNr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/saveReservdel", ReplyAction="http://tempuri.org/ISmServ/saveReservdelResponse")]
        WfTestValveComment.SmServ.ReservdelCL saveReservdel(string ident, WfTestValveComment.SmServ.ReservdelCL reservdel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/saveReservdel", ReplyAction="http://tempuri.org/ISmServ/saveReservdelResponse")]
        System.Threading.Tasks.Task<WfTestValveComment.SmServ.ReservdelCL> saveReservdelAsync(string ident, WfTestValveComment.SmServ.ReservdelCL reservdel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/getOpenDates", ReplyAction="http://tempuri.org/ISmServ/getOpenDatesResponse")]
        WfTestValveComment.SmServ.OpenDateCL[] getOpenDates(string ident, string SrAltKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/getOpenDates", ReplyAction="http://tempuri.org/ISmServ/getOpenDatesResponse")]
        System.Threading.Tasks.Task<WfTestValveComment.SmServ.OpenDateCL[]> getOpenDatesAsync(string ident, string SrAltKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/getServRadRepTid", ReplyAction="http://tempuri.org/ISmServ/getServRadRepTidResponse")]
        WfTestValveComment.SmServ.ServRadRepTidCL getServRadRepTid(string ident, int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/getServRadRepTid", ReplyAction="http://tempuri.org/ISmServ/getServRadRepTidResponse")]
        System.Threading.Tasks.Task<WfTestValveComment.SmServ.ServRadRepTidCL> getServRadRepTidAsync(string ident, int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/getServRadRepTidForServiceRad", ReplyAction="http://tempuri.org/ISmServ/getServRadRepTidForServiceRadResponse")]
        WfTestValveComment.SmServ.ServRadRepTidCL[] getServRadRepTidForServiceRad(string ident, string AnvID, string srAltKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/getServRadRepTidForServiceRad", ReplyAction="http://tempuri.org/ISmServ/getServRadRepTidForServiceRadResponse")]
        System.Threading.Tasks.Task<WfTestValveComment.SmServ.ServRadRepTidCL[]> getServRadRepTidForServiceRadAsync(string ident, string AnvID, string srAltKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/saveServRadRepTid", ReplyAction="http://tempuri.org/ISmServ/saveServRadRepTidResponse")]
        WfTestValveComment.SmServ.ServRadRepTidCL saveServRadRepTid(string ident, WfTestValveComment.SmServ.ServRadRepTidCL srt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/saveServRadRepTid", ReplyAction="http://tempuri.org/ISmServ/saveServRadRepTidResponse")]
        System.Threading.Tasks.Task<WfTestValveComment.SmServ.ServRadRepTidCL> saveServRadRepTidAsync(string ident, WfTestValveComment.SmServ.ServRadRepTidCL srt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/isOpen", ReplyAction="http://tempuri.org/ISmServ/isOpenResponse")]
        string isOpen(string ident, string VartOrdernr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/isOpen", ReplyAction="http://tempuri.org/ISmServ/isOpenResponse")]
        System.Threading.Tasks.Task<string> isOpenAsync(string ident, string VartOrdernr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/getReparatorsForServiceHuvud", ReplyAction="http://tempuri.org/ISmServ/getReparatorsForServiceHuvudResponse")]
        WfTestValveComment.SmServ.ReparatorCL[] getReparatorsForServiceHuvud(string ident, string vartOrdernr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/getReparatorsForServiceHuvud", ReplyAction="http://tempuri.org/ISmServ/getReparatorsForServiceHuvudResponse")]
        System.Threading.Tasks.Task<WfTestValveComment.SmServ.ReparatorCL[]> getReparatorsForServiceHuvudAsync(string ident, string vartOrdernr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/getAlternateKey", ReplyAction="http://tempuri.org/ISmServ/getAlternateKeyResponse")]
        string getAlternateKey(string ident, string vartOrdernr, int radnr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/getAlternateKey", ReplyAction="http://tempuri.org/ISmServ/getAlternateKeyResponse")]
        System.Threading.Tasks.Task<string> getAlternateKeyAsync(string ident, string vartOrdernr, int radnr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/uploadPict", ReplyAction="http://tempuri.org/ISmServ/uploadPictResponse")]
        string uploadPict(System.IO.Stream sPict);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/uploadPict", ReplyAction="http://tempuri.org/ISmServ/uploadPictResponse")]
        System.Threading.Tasks.Task<string> uploadPictAsync(System.IO.Stream sPict);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/savePicture", ReplyAction="http://tempuri.org/ISmServ/savePictureResponse")]
        WfTestValveComment.SmServ.PictureCL savePicture(string ident, WfTestValveComment.SmServ.PictureCL p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/savePicture", ReplyAction="http://tempuri.org/ISmServ/savePictureResponse")]
        System.Threading.Tasks.Task<WfTestValveComment.SmServ.PictureCL> savePictureAsync(string ident, WfTestValveComment.SmServ.PictureCL p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/getPicture", ReplyAction="http://tempuri.org/ISmServ/getPictureResponse")]
        WfTestValveComment.SmServ.PictureCL getPicture(string ident, string vartOrdernr, int radnr, int bildNr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/getPicture", ReplyAction="http://tempuri.org/ISmServ/getPictureResponse")]
        System.Threading.Tasks.Task<WfTestValveComment.SmServ.PictureCL> getPictureAsync(string ident, string vartOrdernr, int radnr, int bildNr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/downLoadPict", ReplyAction="http://tempuri.org/ISmServ/downLoadPictResponse")]
        System.IO.Stream downLoadPict(string pictIdent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/downLoadPict", ReplyAction="http://tempuri.org/ISmServ/downLoadPictResponse")]
        System.Threading.Tasks.Task<System.IO.Stream> downLoadPictAsync(string pictIdent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/deletePicture", ReplyAction="http://tempuri.org/ISmServ/deletePictureResponse")]
        WfTestValveComment.SmServ.PictureCL deletePicture(string ident, WfTestValveComment.SmServ.PictureCL p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/deletePicture", ReplyAction="http://tempuri.org/ISmServ/deletePictureResponse")]
        System.Threading.Tasks.Task<WfTestValveComment.SmServ.PictureCL> deletePictureAsync(string ident, WfTestValveComment.SmServ.PictureCL p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/getPicturesForServiceRad", ReplyAction="http://tempuri.org/ISmServ/getPicturesForServiceRadResponse")]
        WfTestValveComment.SmServ.PictureCL[] getPicturesForServiceRad(string ident, string vartOrdernr, int radnr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/getPicturesForServiceRad", ReplyAction="http://tempuri.org/ISmServ/getPicturesForServiceRadResponse")]
        System.Threading.Tasks.Task<WfTestValveComment.SmServ.PictureCL[]> getPicturesForServiceRadAsync(string ident, string vartOrdernr, int radnr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/getAllSttText", ReplyAction="http://tempuri.org/ISmServ/getAllSttTextResponse")]
        WfTestValveComment.SmServ.StandardTextCL[] getAllSttText(string ident);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/getAllSttText", ReplyAction="http://tempuri.org/ISmServ/getAllSttTextResponse")]
        System.Threading.Tasks.Task<WfTestValveComment.SmServ.StandardTextCL[]> getAllSttTextAsync(string ident);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/getPictCategories", ReplyAction="http://tempuri.org/ISmServ/getPictCategoriesResponse")]
        WfTestValveComment.SmServ.PictCatCL[] getPictCategories(string ident, int Step);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/getPictCategories", ReplyAction="http://tempuri.org/ISmServ/getPictCategoriesResponse")]
        System.Threading.Tasks.Task<WfTestValveComment.SmServ.PictCatCL[]> getPictCategoriesAsync(string ident, int Step);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/updatePictMetadata", ReplyAction="http://tempuri.org/ISmServ/updatePictMetadataResponse")]
        WfTestValveComment.SmServ.PictureCL updatePictMetadata(string ident, WfTestValveComment.SmServ.PictureCL p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/updatePictMetadata", ReplyAction="http://tempuri.org/ISmServ/updatePictMetadataResponse")]
        System.Threading.Tasks.Task<WfTestValveComment.SmServ.PictureCL> updatePictMetadataAsync(string ident, WfTestValveComment.SmServ.PictureCL p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/getVersion", ReplyAction="http://tempuri.org/ISmServ/getVersionResponse")]
        WfTestValveComment.SmServ.VersionCL getVersion(string ident);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/getVersion", ReplyAction="http://tempuri.org/ISmServ/getVersionResponse")]
        System.Threading.Tasks.Task<WfTestValveComment.SmServ.VersionCL> getVersionAsync(string ident);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/SumHoursForServRad", ReplyAction="http://tempuri.org/ISmServ/SumHoursForServRadResponse")]
        decimal SumHoursForServRad(string ident, string srAltKey, string AnvID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/SumHoursForServRad", ReplyAction="http://tempuri.org/ISmServ/SumHoursForServRadResponse")]
        System.Threading.Tasks.Task<decimal> SumHoursForServRadAsync(string ident, string srAltKey, string AnvID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/deleteReservdel", ReplyAction="http://tempuri.org/ISmServ/deleteReservdelResponse")]
        string deleteReservdel(string ident, WfTestValveComment.SmServ.ReservdelCL reservdel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmServ/deleteReservdel", ReplyAction="http://tempuri.org/ISmServ/deleteReservdelResponse")]
        System.Threading.Tasks.Task<string> deleteReservdelAsync(string ident, WfTestValveComment.SmServ.ReservdelCL reservdel);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISmServChannel : WfTestValveComment.SmServ.ISmServ, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SmServClient : System.ServiceModel.ClientBase<WfTestValveComment.SmServ.ISmServ>, WfTestValveComment.SmServ.ISmServ {
        
        public SmServClient() {
        }
        
        public SmServClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SmServClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SmServClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SmServClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string login(string AnvID, string pwd) {
            return base.Channel.login(AnvID, pwd);
        }
        
        public System.Threading.Tasks.Task<string> loginAsync(string AnvID, string pwd) {
            return base.Channel.loginAsync(AnvID, pwd);
        }
        
        public WfTestValveComment.SmServ.ReparatorCL getReparator(string ident) {
            return base.Channel.getReparator(ident);
        }
        
        public System.Threading.Tasks.Task<WfTestValveComment.SmServ.ReparatorCL> getReparatorAsync(string ident) {
            return base.Channel.getReparatorAsync(ident);
        }
        
        public WfTestValveComment.SmServ.ReparatorCL[] getReparators(string ident) {
            return base.Channel.getReparators(ident);
        }
        
        public System.Threading.Tasks.Task<WfTestValveComment.SmServ.ReparatorCL[]> getReparatorsAsync(string ident) {
            return base.Channel.getReparatorsAsync(ident);
        }
        
        public WfTestValveComment.SmServ.ServiceHuvudCL[] getServHuvForUser(string ident) {
            return base.Channel.getServHuvForUser(ident);
        }
        
        public System.Threading.Tasks.Task<WfTestValveComment.SmServ.ServiceHuvudCL[]> getServHuvForUserAsync(string ident) {
            return base.Channel.getServHuvForUserAsync(ident);
        }
        
        public WfTestValveComment.SmServ.ServiceHuvudCL getServHuv(string ident, string vartOrdernr) {
            return base.Channel.getServHuv(ident, vartOrdernr);
        }
        
        public System.Threading.Tasks.Task<WfTestValveComment.SmServ.ServiceHuvudCL> getServHuvAsync(string ident, string vartOrdernr) {
            return base.Channel.getServHuvAsync(ident, vartOrdernr);
        }
        
        public WfTestValveComment.SmServ.ServiceRadListCL[] getAllServRad(string ident, string vartOrdernr) {
            return base.Channel.getAllServRad(ident, vartOrdernr);
        }
        
        public System.Threading.Tasks.Task<WfTestValveComment.SmServ.ServiceRadListCL[]> getAllServRadAsync(string ident, string vartOrdernr) {
            return base.Channel.getAllServRadAsync(ident, vartOrdernr);
        }
        
        public WfTestValveComment.SmServ.ServiceRadCL getServRad(string ident, string vartOrdernr, int radnr) {
            return base.Channel.getServRad(ident, vartOrdernr, radnr);
        }
        
        public System.Threading.Tasks.Task<WfTestValveComment.SmServ.ServiceRadCL> getServRadAsync(string ident, string vartOrdernr, int radnr) {
            return base.Channel.getServRadAsync(ident, vartOrdernr, radnr);
        }
        
        public WfTestValveComment.SmServ.ServiceRadCL saveServRad(string ident, WfTestValveComment.SmServ.ServiceRadCL sr) {
            return base.Channel.saveServRad(ident, sr);
        }
        
        public System.Threading.Tasks.Task<WfTestValveComment.SmServ.ServiceRadCL> saveServRadAsync(string ident, WfTestValveComment.SmServ.ServiceRadCL sr) {
            return base.Channel.saveServRadAsync(ident, sr);
        }
        
        public WfTestValveComment.SmServ.VentilCL getVentil(string ident, string ventilID) {
            return base.Channel.getVentil(ident, ventilID);
        }
        
        public System.Threading.Tasks.Task<WfTestValveComment.SmServ.VentilCL> getVentilAsync(string ident, string ventilID) {
            return base.Channel.getVentilAsync(ident, ventilID);
        }
        
        public WfTestValveComment.SmServ.VentilCL[] getVentilsForCust(string ident, string KundID, string position, string IDnr, string ventiltyp, string fabrikat, string anlaggningsnr) {
            return base.Channel.getVentilsForCust(ident, KundID, position, IDnr, ventiltyp, fabrikat, anlaggningsnr);
        }
        
        public System.Threading.Tasks.Task<WfTestValveComment.SmServ.VentilCL[]> getVentilsForCustAsync(string ident, string KundID, string position, string IDnr, string ventiltyp, string fabrikat, string anlaggningsnr) {
            return base.Channel.getVentilsForCustAsync(ident, KundID, position, IDnr, ventiltyp, fabrikat, anlaggningsnr);
        }
        
        public WfTestValveComment.SmServ.VentilCL saveVentil(string ident, WfTestValveComment.SmServ.VentilCL v) {
            return base.Channel.saveVentil(ident, v);
        }
        
        public System.Threading.Tasks.Task<WfTestValveComment.SmServ.VentilCL> saveVentilAsync(string ident, WfTestValveComment.SmServ.VentilCL v) {
            return base.Channel.saveVentilAsync(ident, v);
        }
        
        public WfTestValveComment.SmServ.VentilKategoriCL[] getVentilKategorier(string ident) {
            return base.Channel.getVentilKategorier(ident);
        }
        
        public System.Threading.Tasks.Task<WfTestValveComment.SmServ.VentilKategoriCL[]> getVentilKategorierAsync(string ident) {
            return base.Channel.getVentilKategorierAsync(ident);
        }
        
        public WfTestValveComment.SmServ.FabrikatCL[] getFabrikat(string ident) {
            return base.Channel.getFabrikat(ident);
        }
        
        public System.Threading.Tasks.Task<WfTestValveComment.SmServ.FabrikatCL[]> getFabrikatAsync(string ident) {
            return base.Channel.getFabrikatAsync(ident);
        }
        
        public WfTestValveComment.SmServ.DnCL[] getDn(string ident) {
            return base.Channel.getDn(ident);
        }
        
        public System.Threading.Tasks.Task<WfTestValveComment.SmServ.DnCL[]> getDnAsync(string ident) {
            return base.Channel.getDnAsync(ident);
        }
        
        public WfTestValveComment.SmServ.PnCL[] getPn(string ident) {
            return base.Channel.getPn(ident);
        }
        
        public System.Threading.Tasks.Task<WfTestValveComment.SmServ.PnCL[]> getPnAsync(string ident) {
            return base.Channel.getPnAsync(ident);
        }
        
        public WfTestValveComment.SmServ.ArtikelCL[] getArtList(string ident, string ArtnrFilter, string ArtnamnFilter) {
            return base.Channel.getArtList(ident, ArtnrFilter, ArtnamnFilter);
        }
        
        public System.Threading.Tasks.Task<WfTestValveComment.SmServ.ArtikelCL[]> getArtListAsync(string ident, string ArtnrFilter, string ArtnamnFilter) {
            return base.Channel.getArtListAsync(ident, ArtnrFilter, ArtnamnFilter);
        }
        
        public WfTestValveComment.SmServ.ArtikelCL getArtikel(string ident, string Artnr) {
            return base.Channel.getArtikel(ident, Artnr);
        }
        
        public System.Threading.Tasks.Task<WfTestValveComment.SmServ.ArtikelCL> getArtikelAsync(string ident, string Artnr) {
            return base.Channel.getArtikelAsync(ident, Artnr);
        }
        
        public WfTestValveComment.SmServ.ReservdelCL[] getReservdelsForServiceRad(string ident, string VartOrdernr, int RadNr) {
            return base.Channel.getReservdelsForServiceRad(ident, VartOrdernr, RadNr);
        }
        
        public System.Threading.Tasks.Task<WfTestValveComment.SmServ.ReservdelCL[]> getReservdelsForServiceRadAsync(string ident, string VartOrdernr, int RadNr) {
            return base.Channel.getReservdelsForServiceRadAsync(ident, VartOrdernr, RadNr);
        }
        
        public WfTestValveComment.SmServ.ReservdelCL getReservdel(string ident, string VartOrdernr, int RadNr, int ReservNr) {
            return base.Channel.getReservdel(ident, VartOrdernr, RadNr, ReservNr);
        }
        
        public System.Threading.Tasks.Task<WfTestValveComment.SmServ.ReservdelCL> getReservdelAsync(string ident, string VartOrdernr, int RadNr, int ReservNr) {
            return base.Channel.getReservdelAsync(ident, VartOrdernr, RadNr, ReservNr);
        }
        
        public WfTestValveComment.SmServ.ReservdelCL saveReservdel(string ident, WfTestValveComment.SmServ.ReservdelCL reservdel) {
            return base.Channel.saveReservdel(ident, reservdel);
        }
        
        public System.Threading.Tasks.Task<WfTestValveComment.SmServ.ReservdelCL> saveReservdelAsync(string ident, WfTestValveComment.SmServ.ReservdelCL reservdel) {
            return base.Channel.saveReservdelAsync(ident, reservdel);
        }
        
        public WfTestValveComment.SmServ.OpenDateCL[] getOpenDates(string ident, string SrAltKey) {
            return base.Channel.getOpenDates(ident, SrAltKey);
        }
        
        public System.Threading.Tasks.Task<WfTestValveComment.SmServ.OpenDateCL[]> getOpenDatesAsync(string ident, string SrAltKey) {
            return base.Channel.getOpenDatesAsync(ident, SrAltKey);
        }
        
        public WfTestValveComment.SmServ.ServRadRepTidCL getServRadRepTid(string ident, int ID) {
            return base.Channel.getServRadRepTid(ident, ID);
        }
        
        public System.Threading.Tasks.Task<WfTestValveComment.SmServ.ServRadRepTidCL> getServRadRepTidAsync(string ident, int ID) {
            return base.Channel.getServRadRepTidAsync(ident, ID);
        }
        
        public WfTestValveComment.SmServ.ServRadRepTidCL[] getServRadRepTidForServiceRad(string ident, string AnvID, string srAltKey) {
            return base.Channel.getServRadRepTidForServiceRad(ident, AnvID, srAltKey);
        }
        
        public System.Threading.Tasks.Task<WfTestValveComment.SmServ.ServRadRepTidCL[]> getServRadRepTidForServiceRadAsync(string ident, string AnvID, string srAltKey) {
            return base.Channel.getServRadRepTidForServiceRadAsync(ident, AnvID, srAltKey);
        }
        
        public WfTestValveComment.SmServ.ServRadRepTidCL saveServRadRepTid(string ident, WfTestValveComment.SmServ.ServRadRepTidCL srt) {
            return base.Channel.saveServRadRepTid(ident, srt);
        }
        
        public System.Threading.Tasks.Task<WfTestValveComment.SmServ.ServRadRepTidCL> saveServRadRepTidAsync(string ident, WfTestValveComment.SmServ.ServRadRepTidCL srt) {
            return base.Channel.saveServRadRepTidAsync(ident, srt);
        }
        
        public string isOpen(string ident, string VartOrdernr) {
            return base.Channel.isOpen(ident, VartOrdernr);
        }
        
        public System.Threading.Tasks.Task<string> isOpenAsync(string ident, string VartOrdernr) {
            return base.Channel.isOpenAsync(ident, VartOrdernr);
        }
        
        public WfTestValveComment.SmServ.ReparatorCL[] getReparatorsForServiceHuvud(string ident, string vartOrdernr) {
            return base.Channel.getReparatorsForServiceHuvud(ident, vartOrdernr);
        }
        
        public System.Threading.Tasks.Task<WfTestValveComment.SmServ.ReparatorCL[]> getReparatorsForServiceHuvudAsync(string ident, string vartOrdernr) {
            return base.Channel.getReparatorsForServiceHuvudAsync(ident, vartOrdernr);
        }
        
        public string getAlternateKey(string ident, string vartOrdernr, int radnr) {
            return base.Channel.getAlternateKey(ident, vartOrdernr, radnr);
        }
        
        public System.Threading.Tasks.Task<string> getAlternateKeyAsync(string ident, string vartOrdernr, int radnr) {
            return base.Channel.getAlternateKeyAsync(ident, vartOrdernr, radnr);
        }
        
        public string uploadPict(System.IO.Stream sPict) {
            return base.Channel.uploadPict(sPict);
        }
        
        public System.Threading.Tasks.Task<string> uploadPictAsync(System.IO.Stream sPict) {
            return base.Channel.uploadPictAsync(sPict);
        }
        
        public WfTestValveComment.SmServ.PictureCL savePicture(string ident, WfTestValveComment.SmServ.PictureCL p) {
            return base.Channel.savePicture(ident, p);
        }
        
        public System.Threading.Tasks.Task<WfTestValveComment.SmServ.PictureCL> savePictureAsync(string ident, WfTestValveComment.SmServ.PictureCL p) {
            return base.Channel.savePictureAsync(ident, p);
        }
        
        public WfTestValveComment.SmServ.PictureCL getPicture(string ident, string vartOrdernr, int radnr, int bildNr) {
            return base.Channel.getPicture(ident, vartOrdernr, radnr, bildNr);
        }
        
        public System.Threading.Tasks.Task<WfTestValveComment.SmServ.PictureCL> getPictureAsync(string ident, string vartOrdernr, int radnr, int bildNr) {
            return base.Channel.getPictureAsync(ident, vartOrdernr, radnr, bildNr);
        }
        
        public System.IO.Stream downLoadPict(string pictIdent) {
            return base.Channel.downLoadPict(pictIdent);
        }
        
        public System.Threading.Tasks.Task<System.IO.Stream> downLoadPictAsync(string pictIdent) {
            return base.Channel.downLoadPictAsync(pictIdent);
        }
        
        public WfTestValveComment.SmServ.PictureCL deletePicture(string ident, WfTestValveComment.SmServ.PictureCL p) {
            return base.Channel.deletePicture(ident, p);
        }
        
        public System.Threading.Tasks.Task<WfTestValveComment.SmServ.PictureCL> deletePictureAsync(string ident, WfTestValveComment.SmServ.PictureCL p) {
            return base.Channel.deletePictureAsync(ident, p);
        }
        
        public WfTestValveComment.SmServ.PictureCL[] getPicturesForServiceRad(string ident, string vartOrdernr, int radnr) {
            return base.Channel.getPicturesForServiceRad(ident, vartOrdernr, radnr);
        }
        
        public System.Threading.Tasks.Task<WfTestValveComment.SmServ.PictureCL[]> getPicturesForServiceRadAsync(string ident, string vartOrdernr, int radnr) {
            return base.Channel.getPicturesForServiceRadAsync(ident, vartOrdernr, radnr);
        }
        
        public WfTestValveComment.SmServ.StandardTextCL[] getAllSttText(string ident) {
            return base.Channel.getAllSttText(ident);
        }
        
        public System.Threading.Tasks.Task<WfTestValveComment.SmServ.StandardTextCL[]> getAllSttTextAsync(string ident) {
            return base.Channel.getAllSttTextAsync(ident);
        }
        
        public WfTestValveComment.SmServ.PictCatCL[] getPictCategories(string ident, int Step) {
            return base.Channel.getPictCategories(ident, Step);
        }
        
        public System.Threading.Tasks.Task<WfTestValveComment.SmServ.PictCatCL[]> getPictCategoriesAsync(string ident, int Step) {
            return base.Channel.getPictCategoriesAsync(ident, Step);
        }
        
        public WfTestValveComment.SmServ.PictureCL updatePictMetadata(string ident, WfTestValveComment.SmServ.PictureCL p) {
            return base.Channel.updatePictMetadata(ident, p);
        }
        
        public System.Threading.Tasks.Task<WfTestValveComment.SmServ.PictureCL> updatePictMetadataAsync(string ident, WfTestValveComment.SmServ.PictureCL p) {
            return base.Channel.updatePictMetadataAsync(ident, p);
        }
        
        public WfTestValveComment.SmServ.VersionCL getVersion(string ident) {
            return base.Channel.getVersion(ident);
        }
        
        public System.Threading.Tasks.Task<WfTestValveComment.SmServ.VersionCL> getVersionAsync(string ident) {
            return base.Channel.getVersionAsync(ident);
        }
        
        public decimal SumHoursForServRad(string ident, string srAltKey, string AnvID) {
            return base.Channel.SumHoursForServRad(ident, srAltKey, AnvID);
        }
        
        public System.Threading.Tasks.Task<decimal> SumHoursForServRadAsync(string ident, string srAltKey, string AnvID) {
            return base.Channel.SumHoursForServRadAsync(ident, srAltKey, AnvID);
        }
        
        public string deleteReservdel(string ident, WfTestValveComment.SmServ.ReservdelCL reservdel) {
            return base.Channel.deleteReservdel(ident, reservdel);
        }
        
        public System.Threading.Tasks.Task<string> deleteReservdelAsync(string ident, WfTestValveComment.SmServ.ReservdelCL reservdel) {
            return base.Channel.deleteReservdelAsync(ident, reservdel);
        }
    }
}
